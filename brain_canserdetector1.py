# -*- coding: utf-8 -*-
"""brain-CanserDetector1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/186x5hjstv2983O6tEbUhjK-f9JA-xein
"""

import pandas as pd 
import tensorflow as tf
import numpy as np 
import os 
import matplotlib.pyplot as plt
import keras

# Upload google drive in our COLAB

from google.colab import drive
drive.mount('/content/drive')

import cv2 
import glob as gb

trainpath = "/content/drive/MyDrive/Colab Notebooks/dataset/dataset03/Training"
testpath = "/content/drive/MyDrive/Colab Notebooks/dataset/dataset03/Testing"

code = {'glioma_tumor':0 ,'meningioma_tumor':1,'no_tumor':2 , "pituitary_tumor" :3}

def getcode(n) : 
    for x , y in code.items() : 
        if n == y : 
            return x

from tensorflow.keras.preprocessing import image_dataset_from_directory

dataset_train = image_dataset_from_directory(trainpath, label_mode='categorical',image_size =(224, 224),batch_size=16 )
dataset_test = image_dataset_from_directory(testpath, label_mode='categorical' ,image_size =(224, 224),batch_size=16)

dataset_test.class_names

from tensorflow.keras.applications import InceptionV3,VGG19,MobileNet

from tensorflow.keras.layers import Dense,Conv2D,Flatten

from tensorflow.keras import Model

def create_model():
    print(1)
    inception = InceptionV3(include_top=True)
    output = Dense(4,activation='softmax')(inception.layers[-2].output)
    model = Model(inception.inputs,output)
    model.compile('adam','categorical_crossentropy','accuracy')
    for layer in model.layers[:-2]:
        layer.trainable = False
    return model

model = create_model()

from tensorflow.keras.callbacks import TensorBoard

tensorboard_callback = TensorBoard(histogram_freq=1,write_images=True)
h = model.fit(dataset_train,epochs=2,callbacks=[tensorboard_callback])

model.save("brain-model1.h5")

import tensorflow as tf

res = nmodule.predict(dataset_test)

code = {'glioma_tumor':0, 'meningioma_tumor':1, 'no_tumor':2, 'pituitary_tumor':3}

code.

def getcode(n) :
  for x ,y in code.items() : 
    if n == y :
      return x

#getcode(np.argmax())

test_path = "/content/drive/MyDrive/Colab Notebooks/dataset/new"

from tensorflow.keras.preprocessing.image import ImageDataGenerator

test_scal = ImageDataGenerator(rescale= 1./255,
                            shear_range = 0.2,
                            zoom_range = 0.2,
                            horizontal_flip = True,
)

test_val = test_scal.flow_from_directory(directory = test_path, target_size = (224,224))

predd = nmodule.predict(test_val)

print(predd)

arr = nmodule.predict(prepare(npath))

print(arr[0][2]*100)

def create_model():
    print(1)
    inception = MobileNet(include_top=True)
    output = Dense(4,activation='softmax')(inception.layers[-2].output)
    model = Model(inception.inputs,output)
    model.compile('adam','categorical_crossentropy','accuracy')
    for layer in model.layers[:-2]:
        layer.trainable = False
    return model

model2 = create_model()

model2.compile(optimizer="Adam", loss=keras.losses.categorical_crossentropy, metrics=['accuracy'])

h = model2.fit(dataset_train,epochs=2)

model.save('brain-model2.h5')

arr = model.predict(prepare(npath))